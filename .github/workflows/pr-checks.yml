name: PR Checks

on:
  pull_request:
    branches: [main]
    types: [ready_for_review, reopened, synchronize]
  pull_request_review:
    types: [submitted]

jobs:
  gitleaks:
    name: Secrets scan (Gitleaks)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  static-analysis:
    name: Static Analysis (Psalm)
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: pdo, pdo_mysql
          coverage: none

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Run Psalm
        run: vendor/bin/psalm --output-format=github --stats

  tests:
    name: Tests (PHPUnit)
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: event_system_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: pdo, pdo_mysql
          coverage: none

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Set up test database environment
        run: |
          echo "DB_HOST=127.0.0.1" > .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=event_system_test" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=root" >> .env
          echo "DB_HOST_TEST=127.0.0.1" >> .env
          echo "DB_PORT_TEST=3306" >> .env
          echo "DB_DATABASE_TEST=event_system_test" >> .env
          echo "DB_USERNAME_TEST=root" >> .env
          echo "DB_PASSWORD_TEST=root" >> .env
          echo "DB_ROOT_PASSWORD_TEST=root" >> .env

      - name: Run migrations
        run: vendor/bin/phinx migrate -e testing

      - name: Run tests
        run: |
          if [ -d "tests" ] && [ "$(ls -A tests)" ]; then
            vendor/bin/phpunit --testdox
          else
            echo "âœ“ No tests configured yet - this check will pass"
            echo "Add PHPUnit tests when ready to enforce test coverage"
          fi
